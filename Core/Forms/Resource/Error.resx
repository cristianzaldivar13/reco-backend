<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApellidoMaternoLongitud" xml:space="preserve">
    <value>El apellido materno debe contener máximo 50 caracteres.</value>
  </data>
  <data name="ApellidoMaternoRequerido" xml:space="preserve">
    <value>El apellido materno es requerido.</value>
  </data>
  <data name="ApellidoPaternoLongitud" xml:space="preserve">
    <value>El apellido paterno debe contener máximo 50 caracteres.</value>
  </data>
  <data name="ApellidoPaternoRequerido" xml:space="preserve">
    <value>Apellido paterno requerido.</value>
  </data>
  <data name="AsuntoLongitud" xml:space="preserve">
    <value>Asunto longitud requerido.</value>
  </data>
  <data name="AsuntoRequerido" xml:space="preserve">
    <value>Asunto requerido.</value>
  </data>
  <data name="EmailEstructura" xml:space="preserve">
    <value>El correo electrónico no cumple con la estructura adecuada.</value>
  </data>
  <data name="EmailLongitud" xml:space="preserve">
    <value>El correo electrónico debe contener máximo 150 caracteres.</value>
  </data>
  <data name="EmailRequerido" xml:space="preserve">
    <value>El correo electrónico es requerido.</value>
  </data>
  <data name="ErrorRequerido" xml:space="preserve">
    <value>Error requerido.</value>
  </data>
  <data name="FechaRequerida" xml:space="preserve">
    <value>Fecha requerida.</value>
  </data>
  <data name="GeneroRequerido" xml:space="preserve">
    <value>El genéro es requerido.</value>
  </data>
  <data name="MensajeLongitud" xml:space="preserve">
    <value>El mensaje debe contener máximo 250 caracteres.</value>
  </data>
  <data name="MensajeRequerido" xml:space="preserve">
    <value>Mensaje requerido.</value>
  </data>
  <data name="MetodoRequerido" xml:space="preserve">
    <value>Método requerido.</value>
  </data>
  <data name="NombreLongitud" xml:space="preserve">
    <value>El nombre debe contener máximo 50 caracteres.</value>
  </data>
  <data name="NombreRequerido" xml:space="preserve">
    <value>El nombre es requerido.</value>
  </data>
  <data name="PasswordActualLongitud" xml:space="preserve">
    <value>La contraseña actual es requerida.</value>
  </data>
  <data name="PasswordActualRequerido" xml:space="preserve">
    <value>La contraseña actual debe contener entre 8 y 32 caracteres.</value>
  </data>
  <data name="PasswordLongitud" xml:space="preserve">
    <value>La contraseña debe contener entre 8 y 32 caracteres.</value>
  </data>
  <data name="PasswordRequerido" xml:space="preserve">
    <value>La contraseña es requerida.</value>
  </data>
  <data name="PerfilRequerido" xml:space="preserve">
    <value>El perfil es requerido.</value>
  </data>
  <data name="PermisosRequerido" xml:space="preserve">
    <value>Debe seleccionar al menos un permiso.</value>
  </data>
  <data name="PermisosRequeridos" xml:space="preserve">
    <value>PermisosRequeridos</value>
  </data>
  <data name="PlataformaRequerida" xml:space="preserve">
    <value>Plataforma requerida.</value>
  </data>
  <data name="TelefonoLongitud" xml:space="preserve">
    <value>El teléfono debe contener 10 digitos.</value>
  </data>
  <data name="TelefonoRequerido" xml:space="preserve">
    <value>El télefono es requerido.</value>
  </data>
  <data name="UsernameLongitud" xml:space="preserve">
    <value>El nombre de usuario debe contener máximo 20 caracteres.</value>
  </data>
  <data name="UsernameRequerido" xml:space="preserve">
    <value>El nombre de usuario es requerido.</value>
  </data>
  <data name="UsuarioIdRequerido" xml:space="preserve">
    <value>Id usuario requerido.</value>
  </data>
  <data name="ValorLongitud" xml:space="preserve">
    <value>ValorLongitud</value>
  </data>
  <data name="ValorRequerido" xml:space="preserve">
    <value>El valor del parámetro es requerido.</value>
  </data>
</root>